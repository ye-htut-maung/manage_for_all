# updated version that get db from image

# services:
#   db:
#     image: yehtutmaung21/manage-for-all-db
#     restart: always
#     environment:
#       - POSTGRES_DB=your_db_name_here
#       - POSTGRES_USER=your_db_user_here
#       - POSTGRES_PASSWORD=your_db_password_here
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   bot:
#     # This now pulls your pre-built image from Docker Hub
#     image: yehtutmaung21/manage-for-all
#     restart: always
#     depends_on:
#       - db
#     environment:
#       - DISCORD_TOKEN=your_discord_token_here
#       - GEMINI_API_KEY=your_gemini_api_key_here
#       - DB_NAME=your_db_name_here
#       - DB_USER=your_db_user_here
#       - DB_PW=your_db_password_here
#       - DB_HOST=db










# for hosting on server
# version: "3.8"

# services:
#   db:
#     image: postgres:16-alpine
#     restart: always
#     environment:
#       - POSTGRES_DB=your_db_name_here
#       - POSTGRES_USER=your_db_user_here
#       - POSTGRES_PASSWORD=your_db_password_here
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#       - ./db_init:/docker-entrypoint-initdb.d

#   bot:
#     # This now pulls your pre-built image from Docker Hub
#     image: your-dockerhub-username/manage-for-all
#     restart: always
#     depends_on:
#       - db
#     environment:
#       - DISCORD_TOKEN=your_discord_token_here
#       - GEMINI_API_KEY=your_gemini_api_key_here
#       - DB_NAME=your_db_name_here
#       - DB_USER=your_db_user_here
#       - DB_PW=your_db_password_here
#       - DB_HOST=db

# volumes:
#   postgres-data:







# for local docker
# version: "3.8"

# services:
#   # The PostgreSQL Database Service
#   db:
#     image: postgres:16-alpine
#     restart: always
#     environment:
#       - POSTGRES_DB=${DB_NAME}
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PW}
#     volumes:
#       - ./postgres-data:/var/lib/postgresql/data
#       - ./db_init:/docker-entrypoint-initdb.d
#     ports:
#       - "5432:5432"

#   # Your Discord Bot Service
#   bot:
#     build: .
#     restart: always
#     depends_on:
#       - db
#     env_file:
#       - .env

# volumes:
#   postgres-data:
